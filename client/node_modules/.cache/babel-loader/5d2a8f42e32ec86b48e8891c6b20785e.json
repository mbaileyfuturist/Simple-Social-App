{"ast":null,"code":"var _jsxFileName = \"/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport MainNavigation from '../MainNavigation/MainNavigation';\nimport classes from './Home.module.css';\nimport { useEffect, useState } from 'react';\nimport Button from '../Button/Button';\nimport Post from '../Post/Post';\nimport Input from '../Input/Input';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  let myStorage = window.localStorage;\n  const id = myStorage.getItem('id');\n  const idToken = myStorage.getItem('idToken');\n  let postsArray = [];\n  const [newPost, setNewPost] = useState(false);\n  const [postHeader, setPostHeader] = useState('');\n  const [post, setPost] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [imageUrl, setImageUrl] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      //Get the profile picture.\n      try {\n        const response = await axios.post('http://localhost:3001/getProfilePicture', {\n          idToken: idToken,\n          id: id\n        });\n        const image = await response.data;\n        setImageUrl(image);\n      } catch (error) {\n        console.log(error);\n      } //Get the posts.\n\n\n      try {\n        const response = await axios.post('http://localhost:3001/getPosts', {\n          id: id\n        });\n        const posts = await response.data;\n\n        for (let key in posts) {\n          postsArray.push(posts[key]);\n        }\n\n        setPosts(postsArray);\n\n        if (response.status !== 200) {\n          throw new Error('Failed to get posts.');\n        }\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const changePostHeader = event => {\n    setPostHeader(event.target.value);\n  };\n\n  const changePost = event => {\n    setPost(event.target.value);\n  };\n\n  const toggleNewPost = () => {\n    setNewPost(!newPost);\n  };\n\n  const uploadPost = async event => {\n    event.preventDefault();\n    toggleNewPost();\n\n    try {\n      const response = await axios.post('http://localhost:3001/uploadPost', {\n        postHeader: postHeader,\n        post: post,\n        id: id\n      });\n\n      if (response.status !== 200) {\n        throw new Error('Failed to upload new post.');\n      }\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const newPostContent = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: uploadPost,\n    className: classes.uploadPost,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: classes.input,\n        placeholder: \"Post Header\",\n        onChange: changePostHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textAreaContainer,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Something I want to share...\",\n        rows: \"10\",\n        onChange: changePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postButtonContainer,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        value: \"Post\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {\n      link: 'Friends'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Want to share something with the world?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          value: newPost ? 'Cancel' : 'Add New Post',\n          type: \"button\",\n          onClick: toggleNewPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), newPost ? newPostContent : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.posts,\n        children: posts.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            header: post.postHeader,\n            body: post.post,\n            id: post.postHeader\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"uPQ/CGMhTk7Ewp9CPdHBVTwwaQA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/Home/Home.js"],"names":["MainNavigation","classes","useEffect","useState","Button","Post","Input","axios","Home","myStorage","window","localStorage","id","getItem","idToken","postsArray","newPost","setNewPost","postHeader","setPostHeader","post","setPost","posts","setPosts","imageUrl","setImageUrl","fetchData","response","image","data","error","console","log","key","push","status","Error","changePostHeader","event","target","value","changePost","toggleNewPost","uploadPost","preventDefault","location","reload","newPostContent","inputContainer","input","textAreaContainer","postButtonContainer","button","container","map","index"],"mappings":"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","sourcesContent":["import MainNavigation from '../MainNavigation/MainNavigation'\nimport classes from './Home.module.css'\nimport { useEffect, useState } from 'react'\nimport Button from '../Button/Button'\nimport Post from '../Post/Post'\nimport Input from '../Input/Input'\nimport axios from 'axios'\n\nconst Home = () => {\n\n    let myStorage = window.localStorage\n    const id = myStorage.getItem('id')\n    const idToken = myStorage.getItem('idToken')\n    let postsArray = []\n\n    const [newPost, setNewPost] = useState(false)\n    const [postHeader, setPostHeader] = useState('')\n    const [post, setPost] = useState('')\n    const [posts, setPosts] = useState([])\n    const [imageUrl, setImageUrl] = useState()\n\n\n    useEffect(() => {\n        \n        const fetchData = async () => {\n\n            //Get the profile picture.\n            try{\n                const response = await axios.post('http://localhost:3001/getProfilePicture', {idToken:idToken, id:id})\n\n                const image = await response.data\n\n                setImageUrl(image)\n                \n            }catch(error){\n                console.log(error)\n            }\n            //Get the posts.\n            try{\n\n                const response = await axios.post('http://localhost:3001/getPosts', {id:id})\n        \n                const posts = await response.data\n\n\n                for(let key in posts){\n                    postsArray.push(posts[key])\n                }\n\n                setPosts(postsArray)\n\n                if(response.status !== 200){\n                    throw new Error('Failed to get posts.')\n                }\n\n            }catch(error){\n\n            }\n        }\n\n        fetchData()\n    }, [])\n\n    const changePostHeader = event => {\n        setPostHeader(event.target.value)\n    }\n\n    const changePost = event => {\n        setPost(event.target.value)\n    }\n\n    const toggleNewPost = () => {\n        setNewPost(!newPost)\n    }\n\n    const uploadPost = async event => {\n\n        event.preventDefault();\n        toggleNewPost()\n        \n        try{\n\n            const response = await axios.post('http://localhost:3001/uploadPost',{\n                    postHeader:postHeader,\n                    post:post,\n                    id:id\n                })\n\n            if(response.status !== 200){\n                throw new Error('Failed to upload new post.')\n            }\n\n            window.location.reload()\n\n        }catch(error){\n            console.log(error)\n        }\n\n    }\n\n    const newPostContent = (\n        <form onSubmit={uploadPost} className={classes.uploadPost}>\n            <div className={classes.inputContainer}>   \n                <Input className={classes.input} placeholder='Post Header' onChange={changePostHeader}/>\n            </div>\n            <div className={classes.textAreaContainer}>\n                <textarea placeholder='Something I want to share...' rows='10' onChange={changePost}/>\n            </div>\n            <div className={classes.postButtonContainer}>\n            <Button className={classes.button} value='Post' type='submit'/>\n            </div>\n        </form>\n    )\n\n    return(\n        <div>\n            <MainNavigation link={'Friends'}/>\n            <div className={classes.container}>\n                <img src={imageUrl} />\n                <div>\n                    <p>Want to share something with the world?</p>\n                    <Button className={classes.button} value={newPost ? 'Cancel':'Add New Post'} type='button' onClick={toggleNewPost}/>\n                    {newPost ? newPostContent : <></>}\n                </div>\n                <div className={classes.posts}>\n                    {posts.map((post, index) => {\n                        return <Post key={index} header={post.postHeader} body={post.post} id={post.postHeader}/>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}