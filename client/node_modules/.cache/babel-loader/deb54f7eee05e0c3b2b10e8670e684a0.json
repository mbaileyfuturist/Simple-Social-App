{"ast":null,"code":"var _jsxFileName = \"/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/Messages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport MainNavigation from '../MainNavigation/MainNavigation';\nimport classes from './Messages.module.css';\nimport { useState } from 'react';\nimport MessageCard from '../MessageCard/MessageCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = props => {\n  _s();\n\n  const myStorage = window.localStorage;\n  const id = myStorage.getItem('id');\n  const idToken = myStorage.getItem('idToken'); //Message room in this case is represented by the first message.\n\n  const [messageRooms, setMessageRooms] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post('http://localhost:3001/getMessageRooms', {\n          id: id,\n          idToken: idToken\n        });\n        const messages = await response.data;\n        let messagesArray = [];\n        let lastMessages = []; //Iterate through each room.\n\n        for (let key in messages) {\n          const message = messages[key]; //Iterate through each message in the room.\n\n          for (let key in message) {\n            messagesArray.push(message[key]);\n          } //Get the last message and store it.\n\n\n          const lastIndex = messagesArray.length - 1;\n          lastMessages.push(messagesArray[lastIndex]);\n        }\n\n        setMessageRooms(lastMessages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {\n      link: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messagesContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.title,\n        children: \"Recent Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), messageRooms.map(messageRoom => {\n        return /*#__PURE__*/_jsxDEV(MessageCard, {\n          id: messageRoom.id,\n          firstName: messageRoom.firstName,\n          lastName: messageRoom.lastName,\n          lastMessage: messageRoom.message\n        }, messageRoom.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messages, \"807kwKn9ChIdxbNoOuVy3Fk9IxA=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/Messages/Messages.js"],"names":["useEffect","MainNavigation","classes","useState","MessageCard","axios","Messages","props","myStorage","window","localStorage","id","getItem","idToken","messageRooms","setMessageRooms","fetchData","response","post","messages","data","messagesArray","lastMessages","key","message","push","lastIndex","length","error","console","log","messagesContainer","title","map","messageRoom","firstName","lastName"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAEtB,QAAMC,SAAS,GAAGC,MAAM,CAACC,YAAzB;AACA,QAAMC,EAAE,GAAGH,SAAS,CAACI,OAAV,CAAkB,IAAlB,CAAX;AACA,QAAMC,OAAO,GAAGL,SAAS,CAACI,OAAV,CAAkB,SAAlB,CAAhB,CAJsB,CAMtB;;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAEb,UAAMgB,SAAS,GAAG,YAAY;AACzB,UAAG;AAEC,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,uCAAX,EAAoD;AACvEP,UAAAA,EAAE,EAACA,EADoE;AAEvEE,UAAAA,OAAO,EAACA;AAF+D,SAApD,CAAvB;AAIA,cAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAhC;AAEA,YAAIC,aAAa,GAAG,EAApB;AACA,YAAIC,YAAY,GAAG,EAAnB,CATD,CAUC;;AACA,aAAI,IAAIC,GAAR,IAAeJ,QAAf,EAAwB;AACpB,gBAAMK,OAAO,GAAGL,QAAQ,CAACI,GAAD,CAAxB,CADoB,CAEpB;;AACA,eAAI,IAAIA,GAAR,IAAeC,OAAf,EAAuB;AACnBH,YAAAA,aAAa,CAACI,IAAd,CAAmBD,OAAO,CAACD,GAAD,CAA1B;AACH,WALmB,CAMpB;;;AACA,gBAAMG,SAAS,GAAGL,aAAa,CAACM,MAAd,GAAuB,CAAzC;AACAL,UAAAA,YAAY,CAACG,IAAb,CAAkBJ,aAAa,CAACK,SAAD,CAA/B;AACH;;AAEDX,QAAAA,eAAe,CAACO,YAAD,CAAf;AAEH,OAxBD,CAwBC,OAAMM,KAAN,EAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACL,KA5BD;;AA8BAZ,IAAAA,SAAS;AACX,GAjCQ,EAiCN,EAjCM,CAAT;AAmCA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEd,OAAO,CAAC6B,iBAAxB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKlB,YAAY,CAACmB,GAAb,CAAiBC,WAAW,IAAI;AAC7B,4BAAO,QAAC,WAAD;AAAkC,UAAA,EAAE,EAAEA,WAAW,CAACvB,EAAlD;AAAsD,UAAA,SAAS,EAAEuB,WAAW,CAACC,SAA7E;AACC,UAAA,QAAQ,EAAED,WAAW,CAACE,QADvB;AACiC,UAAA,WAAW,EAAEF,WAAW,CAACV;AAD1D,WAAkBU,WAAW,CAACvB,EAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxDD;;GAAML,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import { useEffect } from 'react'\nimport MainNavigation from '../MainNavigation/MainNavigation'\nimport classes from './Messages.module.css'\nimport { useState } from 'react'\nimport MessageCard from '../MessageCard/MessageCard'\nimport axios from 'axios'\n\nconst Messages = props => {\n\n    const myStorage = window.localStorage\n    const id = myStorage.getItem('id')\n    const idToken = myStorage.getItem('idToken')\n\n    //Message room in this case is represented by the first message.\n    const [messageRooms, setMessageRooms] = useState([])\n\n    useEffect(() => {\n\n       const fetchData = async () => {\n            try{\n\n                const response = await axios.post('http://localhost:3001/getMessageRooms', {\n                    id:id,\n                    idToken:idToken\n                })\n                const messages = await response.data\n\n                let messagesArray = []\n                let lastMessages = []\n                //Iterate through each room.\n                for(let key in messages){\n                    const message = messages[key]\n                    //Iterate through each message in the room.\n                    for(let key in message){\n                        messagesArray.push(message[key])\n                    }\n                    //Get the last message and store it.\n                    const lastIndex = messagesArray.length - 1\n                    lastMessages.push(messagesArray[lastIndex])\n                }\n\n                setMessageRooms(lastMessages)\n\n            }catch(error){\n                console.log(error)\n            }\n       }\n\n       fetchData()\n    }, [])\n\n    return(\n        <div>\n            <MainNavigation link='Home'/>\n            <div className={classes.messagesContainer}>\n                <p className={classes.title}>Recent Messages</p>\n                {messageRooms.map(messageRoom => {\n                    return <MessageCard key={messageRoom.id} id={messageRoom.id} firstName={messageRoom.firstName} \n                            lastName={messageRoom.lastName} lastMessage={messageRoom.message}/> \n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Messages"]},"metadata":{},"sourceType":"module"}