{"ast":null,"code":"var _jsxFileName = \"/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/SearchPeople/SearchPeople.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Person from '../Person/Person';\nimport classes from './SearchPeople.module.css';\nimport MainNavigation from '../MainNavigation/MainNavigation';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPeople = () => {\n  _s();\n\n  const myStorage = window.localStorage;\n  const idToken = myStorage.getItem('idToken');\n  const searchFriend = myStorage.getItem('friend');\n  const [findFriends, setFindFriends] = useState([]);\n  useEffect(() => {\n    const findUsers = async () => {\n      try {\n        const response = await axios.post('http://localhost:3001/getUsers', {\n          idToken: idToken\n        });\n        const users = await response.data;\n        let findFriendsArray = [];\n\n        for (let key in users) {\n          const fullName = users[key].firstName + ' ' + users[key].lastName;\n\n          if (fullName === searchFriend) {\n            const copyUser = { ...users[key],\n              status: 'viewing'\n            };\n            findFriendsArray.push(copyUser);\n          }\n        }\n\n        setFindFriends(findFriendsArray);\n\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch users.');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    findUsers();\n  }, [searchFriend]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {\n      link: 'Home'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: \"Relevent Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), findFriends.map(person => {\n      return /*#__PURE__*/_jsxDEV(Person, {\n        id: person.id,\n        firstName: person.firstName,\n        lastName: person.lastName,\n        address: person.address,\n        city: person.city,\n        state: person.state,\n        age: person.age,\n        image: person.uploadProfilePicture.url,\n        status: person.status\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchPeople, \"GXiYMU2JsPYbVxaBAuxXt4Gi5Q8=\");\n\n_c = SearchPeople;\nexport default SearchPeople;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPeople\");","map":{"version":3,"sources":["/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/SearchPeople/SearchPeople.js"],"names":["useEffect","useState","Person","classes","MainNavigation","axios","SearchPeople","myStorage","window","localStorage","idToken","getItem","searchFriend","findFriends","setFindFriends","findUsers","response","post","users","data","findFriendsArray","key","fullName","firstName","lastName","copyUser","status","push","Error","error","console","log","title","map","person","id","address","city","state","age","uploadProfilePicture","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,SAAS,GAAGC,MAAM,CAACC,YAAzB;AACA,QAAMC,OAAO,GAAGH,SAAS,CAACI,OAAV,CAAkB,SAAlB,CAAhB;AACA,QAAMC,YAAY,GAAGL,SAAS,CAACI,OAAV,CAAkB,QAAlB,CAArB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMe,SAAS,GAAG,YAAY;AAE1B,UAAG;AAEC,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,gCAAX,EAA6C;AAACP,UAAAA,OAAO,EAACA;AAAT,SAA7C,CAAvB;AACA,cAAMQ,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAA7B;AAEA,YAAIC,gBAAgB,GAAG,EAAvB;;AACA,aAAI,IAAIC,GAAR,IAAeH,KAAf,EAAqB;AACjB,gBAAMI,QAAQ,GAAGJ,KAAK,CAACG,GAAD,CAAL,CAAWE,SAAX,GAAuB,GAAvB,GAA6BL,KAAK,CAACG,GAAD,CAAL,CAAWG,QAAzD;;AACA,cAAGF,QAAQ,KAAKV,YAAhB,EAA6B;AACzB,kBAAMa,QAAQ,GAAG,EACb,GAAGP,KAAK,CAACG,GAAD,CADK;AAEbK,cAAAA,MAAM,EAAC;AAFM,aAAjB;AAIAN,YAAAA,gBAAgB,CAACO,IAAjB,CAAsBF,QAAtB;AACH;AACJ;;AACDX,QAAAA,cAAc,CAACM,gBAAD,CAAd;;AAEA,YAAGJ,QAAQ,CAACU,MAAT,KAAoB,GAAvB,EAA2B;AACvB,gBAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACH;AACJ,OArBD,CAqBC,OAAMC,KAAN,EAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,KA3BD;;AA6BAd,IAAAA,SAAS;AAEZ,GAjCQ,EAiCN,CAACH,YAAD,CAjCM,CAAT;AAmCA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAET,OAAO,CAAC6B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKnB,WAAW,CAACoB,GAAZ,CAAgBC,MAAM,IAAI;AACvB,0BAAO,QAAC,MAAD;AAAwB,QAAA,EAAE,EAAEA,MAAM,CAACC,EAAnC;AAAuC,QAAA,SAAS,EAAED,MAAM,CAACX,SAAzD;AAAoE,QAAA,QAAQ,EAAEW,MAAM,CAACV,QAArF;AACP,QAAA,OAAO,EAAEU,MAAM,CAACE,OADT;AACkB,QAAA,IAAI,EAAEF,MAAM,CAACG,IAD/B;AACqC,QAAA,KAAK,EAAEH,MAAM,CAACI,KADnD;AAC0D,QAAA,GAAG,EAAEJ,MAAM,CAACK,GADtE;AAC2E,QAAA,KAAK,EAAEL,MAAM,CAACM,oBAAP,CAA4BC,GAD9G;AACmH,QAAA,MAAM,EAAEP,MAAM,CAACR;AADlI,SAAaQ,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAHA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApDD;;GAAM7B,Y;;KAAAA,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Person from '../Person/Person'\nimport classes from './SearchPeople.module.css'\nimport MainNavigation from '../MainNavigation/MainNavigation'\nimport axios from 'axios'\n\nconst SearchPeople = () => {\n\n    const myStorage = window.localStorage\n    const idToken = myStorage.getItem('idToken')\n    const searchFriend = myStorage.getItem('friend')\n    const [findFriends, setFindFriends] = useState([])\n\n    useEffect(() => {\n\n        const findUsers = async () => {\n\n            try{\n\n                const response = await axios.post('http://localhost:3001/getUsers', {idToken:idToken})\n                const users = await response.data\n                \n                let findFriendsArray = []\n                for(let key in users){\n                    const fullName = users[key].firstName + ' ' + users[key].lastName\n                    if(fullName === searchFriend){\n                        const copyUser = {\n                            ...users[key],\n                            status:'viewing'\n                        }\n                        findFriendsArray.push(copyUser)\n                    }\n                }\n                setFindFriends(findFriendsArray)\n\n                if(response.status !== 200){\n                    throw new Error('Failed to fetch users.')\n                }\n            }catch(error){\n                console.log(error)\n            }\n\n        }\n\n        findUsers()\n\n    }, [searchFriend])\n\n    return(\n        <div>\n            <MainNavigation link={'Home'}/>\n            <p className={classes.title}>Relevent Users</p>\n            {findFriends.map(person => {\n                return <Person key={person.id} id={person.id} firstName={person.firstName} lastName={person.lastName} \n                address={person.address} city={person.city} state={person.state} age={person.age} image={person.uploadProfilePicture.url} status={person.status}/>\n            })}\n        </div>\n    )\n}\n\nexport default SearchPeople"]},"metadata":{},"sourceType":"module"}