{"ast":null,"code":"var _jsxFileName = \"/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/MessageRoom/MessageRoom.js\",\n    _s = $RefreshSig$();\n\nimport classes from './MessageRoom.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Button from '../Button/Button';\nimport MainNavigation from '../MainNavigation/MainNavigation';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageRoom = () => {\n  _s();\n\n  const params = useParams();\n  const correspondingId = params.id.substring(1);\n  const myStorage = window.localStorage;\n  const id = myStorage.getItem('id');\n  const idToken = myStorage.getItem('idToken');\n  const [user, setUser] = useState({});\n  const [message, setMessage] = useState('');\n  const [messages, setMsssages] = useState([]);\n  useEffect(() => {\n    const getCorrespondingUser = async () => {\n      const response = await axios.post('http://localhost:3001/getCorrespondingUser', {\n        idToken: idToken,\n        id: correspondingId\n      });\n      const user = await response.data;\n      setUser(user);\n    };\n\n    const getMessages = async () => {\n      try {\n        const response = await axios.post('http://localhost:3001/getMessages', {\n          id: id,\n          correspondingId: correspondingId,\n          idToken: idToken\n        });\n        const messages = await response.data;\n        let messageStack = [];\n\n        for (let key in messages) {\n          messageStack.push(messages[key]);\n        }\n\n        setMsssages(messageStack);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getCorrespondingUser();\n    setInterval(() => {\n      getMessages();\n    }, 3000);\n  }, []);\n\n  const changeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const sendMessage = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost:3001/postMessageToUser', {\n        message: message,\n        id: id,\n        idToken: idToken,\n        correspondingId: correspondingId,\n        firstName: user.firstName,\n        lastName: user.lastName\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3001/postMessageToCorrespondingUser', {\n        message: message,\n        id: id,\n        idToken: idToken,\n        correspondingId: correspondingId,\n        firstName: user.firstName,\n        lastName: user.lastName\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {\n      link: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messagesWrapper,\n      children: messages.map(object => {\n        return object.id === id ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.message,\n          children: object.message + ': ' + object.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.correspondingMessage,\n          children: object.firstName + ': ' + object.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: classes.formWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.one,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          type: \"text\",\n          onChange: changeMessage,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.two,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          value: \"Send\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageRoom, \"c5/yrMzLvw5Mq8KQT+3nHBL1I7c=\", false, function () {\n  return [useParams];\n});\n\n_c = MessageRoom;\nexport default MessageRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageRoom\");","map":{"version":3,"sources":["/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/MessageRoom/MessageRoom.js"],"names":["classes","useParams","useEffect","useState","Button","MainNavigation","axios","MessageRoom","params","correspondingId","id","substring","myStorage","window","localStorage","getItem","idToken","user","setUser","message","setMessage","messages","setMsssages","getCorrespondingUser","response","post","data","getMessages","messageStack","key","push","error","console","log","setInterval","changeMessage","event","target","value","sendMessage","preventDefault","firstName","lastName","messagesWrapper","map","object","correspondingMessage","formWrapper","one","input","two","button"],"mappings":"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","sourcesContent":["import classes from './MessageRoom.module.css'\nimport { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport Button from '../Button/Button'\nimport MainNavigation from '../MainNavigation/MainNavigation'\nimport axios from 'axios'\n\nconst MessageRoom = () => {\n\n    const params = useParams()\n    const correspondingId = params.id.substring(1)\n\n    const myStorage = window.localStorage\n    const id = myStorage.getItem('id')\n    const idToken = myStorage.getItem('idToken')\n    const [user, setUser] = useState({})\n    const [message, setMessage] = useState('')\n    const [messages, setMsssages] = useState([])\n\n    useEffect(() => {\n        const getCorrespondingUser = async () => {\n            const response = await axios.post('http://localhost:3001/getCorrespondingUser', {idToken:idToken, id:correspondingId})\n            const user = await response.data\n\n            setUser(user)\n        }\n\n        const getMessages = async () => {\n            try{\n                const response = await axios.post('http://localhost:3001/getMessages', {\n                    id:id,\n                    correspondingId:correspondingId,\n                    idToken:idToken\n                })\n                const messages = await response.data\n\n                let messageStack = []\n                for(let key in messages){\n                  messageStack.push(messages[key])\n                }\n\n                setMsssages(messageStack)\n\n            }catch(error){\n                console.log(error)\n            }\n        }\n\n        getCorrespondingUser()\n\n        setInterval(() => {\n            getMessages()\n        }, 3000)\n\n    }, [])\n\n    const changeMessage = event => {\n        setMessage(event.target.value)\n    }\n\n    const sendMessage = async event => {\n\n        event.preventDefault();\n        \n        try{\n            const response = await axios.post('http://localhost:3001/postMessageToUser',{\n                message:message,\n                id:id,\n                idToken:idToken,\n                correspondingId:correspondingId,\n                firstName:user.firstName,\n                lastName:user.lastName\n                })\n        }catch(error){\n            console.log(error)\n        }\n\n        try{\n            const response = await axios.post('http://localhost:3001/postMessageToCorrespondingUser',{\n                message:message,\n                id:id,\n                idToken:idToken,\n                correspondingId:correspondingId,\n                firstName:user.firstName,\n                lastName:user.lastName\n                })\n        }catch(error){\n            console.log(error)\n        }\n\n        setMessage('')\n    }\n\n    return(\n        <div>\n            <MainNavigation link='Home' />\n            <div className={classes.messagesWrapper}>\n                {messages.map(object => {\n                    return object.id ===id ? <p className={classes.message}>{object.message + ': ' + object.firstName}</p> \n                    : <p className={classes.correspondingMessage}>{object.firstName + ': ' + object.message}</p>\n                })}\n            </div>\n            <form onSubmit={sendMessage} className={classes.formWrapper}>\n                <div className={classes.one}>\n                    <input className={classes.input} type='text' onChange={changeMessage} value={message}/>\n                </div>\n                <div className={classes.two}>\n                    <Button  className={classes.button} value='Send' type='submit'/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default MessageRoom"]},"metadata":{},"sourceType":"module"}