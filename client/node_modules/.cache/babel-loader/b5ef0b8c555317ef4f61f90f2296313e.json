{"ast":null,"code":"var _jsxFileName = \"/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/UserProfile/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport MainNavigation from '../MainNavigation/MainNavigation';\nimport classes from './UserProfile.module.css';\nimport { useEffect, useState } from 'react';\nimport Button from '../Button/Button';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Post from '../Post/Post';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = props => {\n  _s();\n\n  let myStorage = window.localStorage;\n  const id = myStorage.getItem('id');\n  const params = useParams();\n  const history = useHistory();\n  const userId = params.id.substring(1);\n  const [posts, setPosts] = useState([]);\n  const [correspondingUser, setCorrespondingUser] = useState({});\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const [imageUrl, setImageUrl] = useState();\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await axios.post('http://localhost:3001/getUser', {\n          id: id\n        });\n        const loggedInUser = await response.data;\n        setLoggedInUser(loggedInUser);\n\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch logged in user.');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const fetchCorrespondingUser = async () => {\n      try {\n        const response = await axios.post('http://localhost:3001/getUser', {\n          id: userId\n        });\n        const user = await response.data;\n        setCorrespondingUser(user);\n        let postsArray = [];\n        const posts = user.posts;\n\n        for (let key in posts) {\n          postsArray.push(posts[key]);\n        }\n\n        setPosts(postsArray);\n        const imageInfo = user.uploadProfilePicture;\n        setImageUrl(imageInfo.url);\n\n        if (response.status !== 200) {\n          throw new Error('Failed to get posts.');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchUser();\n    fetchCorrespondingUser();\n  }, []);\n\n  const sendRequest = async () => {\n    //Post the friend request to logged in user\n    try {\n      const response = await axios.post('http://localhost:3001/addFriend', {\n        paramId: id,\n        firstName: correspondingUser.firstName,\n        lastName: correspondingUser.lastName,\n        about: correspondingUser.about,\n        city: correspondingUser.city,\n        state: correspondingUser.state,\n        status: 'sentRequest',\n        profilePicture: correspondingUser.uploadProfilePicture.url,\n        age: correspondingUser.age,\n        id: correspondingUser.id\n      });\n    } catch (error) {\n      console.log(error);\n    } //Post friend request to corresponding user.\n\n\n    try {\n      const response = await axios.post('http://localhost:3001/addFriend', {\n        paramId: userId,\n        firstName: loggedInUser.firstName,\n        lastName: loggedInUser.lastName,\n        about: loggedInUser.about,\n        city: loggedInUser.city,\n        state: loggedInUser.state,\n        status: 'receivedRequest',\n        profilePicture: loggedInUser.uploadProfilePicture.url,\n        age: loggedInUser.age,\n        id: loggedInUser.id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const navigateToMessageRoom = async () => {\n    history.push('MessageRoom:' + props.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {\n      link: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.title,\n          children: correspondingUser.firstName + ' ' + correspondingUser.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: correspondingUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsContainer,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttonOne,\n            value: \"Friend Request\",\n            onClick: sendRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttonTwo,\n            value: \"Message\",\n            onClick: navigateToMessageRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.posts,\n        children: posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            header: post.postHeader,\n            body: post.post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfile, \"fGZrZAqMT5wzAx9iyFmGEYFpasg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/home/micheal/Documents/web-projects/Simple-Social-App/client/src/Components/UserProfile/UserProfile.js"],"names":["MainNavigation","classes","useEffect","useState","Button","useParams","useHistory","Post","axios","UserProfile","props","myStorage","window","localStorage","id","getItem","params","history","userId","substring","posts","setPosts","correspondingUser","setCorrespondingUser","loggedInUser","setLoggedInUser","imageUrl","setImageUrl","fetchUser","response","post","data","status","Error","error","console","log","fetchCorrespondingUser","user","postsArray","key","push","imageInfo","uploadProfilePicture","url","sendRequest","paramId","firstName","lastName","about","city","state","profilePicture","age","navigateToMessageRoom","container","userInfo","title","buttonsContainer","buttonOne","buttonTwo","map","postHeader"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAEzB,MAAIC,SAAS,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,EAAE,GAAGH,SAAS,CAACI,OAAV,CAAkB,IAAlB,CAAX;AACA,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,MAAM,GAAGF,MAAM,CAACF,EAAP,CAAUK,SAAV,CAAoB,CAApB,CAAf;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAM0B,SAAS,GAAG,YAAY;AAC1B,UAAG;AAEC,cAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,+BAAX,EAA4C;AAAChB,UAAAA,EAAE,EAACA;AAAJ,SAA5C,CAAvB;AACA,cAAMU,YAAY,GAAG,MAAMK,QAAQ,CAACE,IAApC;AACAN,QAAAA,eAAe,CAACD,YAAD,CAAf;;AAEA,YAAGK,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvB,gBAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AACJ,OATD,CASC,OAAMC,KAAN,EAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAbD;;AAeA,UAAMG,sBAAsB,GAAG,YAAY;AACvC,UAAG;AAEC,cAAMR,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,+BAAX,EAA4C;AAAChB,UAAAA,EAAE,EAACI;AAAJ,SAA5C,CAAvB;AACA,cAAMoB,IAAI,GAAG,MAAMT,QAAQ,CAACE,IAA5B;AACAR,QAAAA,oBAAoB,CAACe,IAAD,CAApB;AAEA,YAAIC,UAAU,GAAG,EAAjB;AACA,cAAMnB,KAAK,GAAGkB,IAAI,CAAClB,KAAnB;;AACA,aAAI,IAAIoB,GAAR,IAAepB,KAAf,EAAqB;AACjBmB,UAAAA,UAAU,CAACE,IAAX,CAAgBrB,KAAK,CAACoB,GAAD,CAArB;AACH;;AAEDnB,QAAAA,QAAQ,CAACkB,UAAD,CAAR;AAEA,cAAMG,SAAS,GAAGJ,IAAI,CAACK,oBAAvB;AACAhB,QAAAA,WAAW,CAACe,SAAS,CAACE,GAAX,CAAX;;AAEA,YAAGf,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvB,gBAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;AAEJ,OArBD,CAqBC,OAAMC,KAAN,EAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAzBD;;AA2BAN,IAAAA,SAAS;AACTS,IAAAA,sBAAsB;AACzB,GA/CQ,EA+CN,EA/CM,CAAT;;AAiDA,QAAMQ,WAAW,GAAG,YAAY;AAC5B;AACA,QAAG;AACC,YAAMhB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA8C;AACjEgB,QAAAA,OAAO,EAAChC,EADyD;AAEjEiC,QAAAA,SAAS,EAACzB,iBAAiB,CAACyB,SAFqC;AAGjEC,QAAAA,QAAQ,EAAC1B,iBAAiB,CAAC0B,QAHsC;AAIjEC,QAAAA,KAAK,EAAC3B,iBAAiB,CAAC2B,KAJyC;AAKjEC,QAAAA,IAAI,EAAC5B,iBAAiB,CAAC4B,IAL0C;AAMjEC,QAAAA,KAAK,EAAC7B,iBAAiB,CAAC6B,KANyC;AAOjEnB,QAAAA,MAAM,EAAC,aAP0D;AAQjEoB,QAAAA,cAAc,EAAC9B,iBAAiB,CAACqB,oBAAlB,CAAuCC,GARW;AASjES,QAAAA,GAAG,EAAC/B,iBAAiB,CAAC+B,GAT2C;AAUjEvC,QAAAA,EAAE,EAACQ,iBAAiB,CAACR;AAV4C,OAA9C,CAAvB;AAYH,KAbD,CAaC,OAAMoB,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAjB2B,CAmB5B;;;AACA,QAAG;AACC,YAAML,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA8C;AACjEgB,QAAAA,OAAO,EAAC5B,MADyD;AAEjE6B,QAAAA,SAAS,EAACvB,YAAY,CAACuB,SAF0C;AAGjEC,QAAAA,QAAQ,EAACxB,YAAY,CAACwB,QAH2C;AAIjEC,QAAAA,KAAK,EAACzB,YAAY,CAACyB,KAJ8C;AAKjEC,QAAAA,IAAI,EAAC1B,YAAY,CAAC0B,IAL+C;AAMjEC,QAAAA,KAAK,EAAC3B,YAAY,CAAC2B,KAN8C;AAOjEnB,QAAAA,MAAM,EAAC,iBAP0D;AAQjEoB,QAAAA,cAAc,EAAC5B,YAAY,CAACmB,oBAAb,CAAkCC,GARgB;AASjES,QAAAA,GAAG,EAAC7B,YAAY,CAAC6B,GATgD;AAUjEvC,QAAAA,EAAE,EAACU,YAAY,CAACV;AAViD,OAA9C,CAAvB;AAYH,KAbD,CAaC,OAAMoB,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GApCD;;AAsCA,QAAMoB,qBAAqB,GAAG,YAAY;AACtCrC,IAAAA,OAAO,CAACwB,IAAR,CAAa,iBAAiB/B,KAAK,CAACI,EAApC;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACsD,SAAxB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEtD,OAAO,CAACuD,QAAxB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAE9B;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAEzB,OAAO,CAACwD,KAAtB;AAAA,oBAA8BnC,iBAAiB,CAACyB,SAAlB,GAA8B,GAA9B,GAAoCzB,iBAAiB,CAAC0B;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAI1B,iBAAiB,CAAC2B;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAEhD,OAAO,CAACyD,gBAAxB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEzD,OAAO,CAAC0D,SAA3B;AAAsC,YAAA,KAAK,EAAC,gBAA5C;AAA6D,YAAA,OAAO,EAAEd;AAAtE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE5C,OAAO,CAAC2D,SAA3B;AAAsC,YAAA,KAAK,EAAC,SAA5C;AAAsD,YAAA,OAAO,EAAEN;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAErD,OAAO,CAACmB,KAAxB;AAAA,kBACKA,KAAK,CAACyC,GAAN,CAAU/B,IAAI,IAAI;AACf,8BAAO,QAAC,IAAD;AAAM,YAAA,MAAM,EAAEA,IAAI,CAACgC,UAAnB;AAA+B,YAAA,IAAI,EAAEhC,IAAI,CAACA;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA7HD;;GAAMrB,W;UAIaJ,S,EACCC,U;;;KALdG,W;AA+HN,eAAeA,WAAf","sourcesContent":["import MainNavigation from '../MainNavigation/MainNavigation'\nimport classes from './UserProfile.module.css'\nimport { useEffect, useState } from 'react'\nimport Button from '../Button/Button'\nimport { useParams, useHistory } from 'react-router-dom'\nimport Post from '../Post/Post'\nimport axios from 'axios'\n\nconst UserProfile = props => {\n\n    let myStorage = window.localStorage\n    const id = myStorage.getItem('id')\n    const params = useParams()\n    const history = useHistory()\n    const userId = params.id.substring(1)\n\n    const [posts, setPosts] = useState([])\n    const [correspondingUser, setCorrespondingUser] = useState({})\n    const [loggedInUser, setLoggedInUser] = useState({})\n    const [imageUrl, setImageUrl] = useState()\n\n    useEffect(() => {\n\n        \n        const fetchUser = async () => {\n            try{\n                \n                const response = await axios.post('http://localhost:3001/getUser', {id:id})\n                const loggedInUser = await response.data\n                setLoggedInUser(loggedInUser)\n\n                if(response.status !== 200){\n                    throw new Error('Failed to fetch logged in user.')\n                }\n            }catch(error){\n                console.log(error)\n            }\n        }\n\n        const fetchCorrespondingUser = async () => {\n            try{\n\n                const response = await axios.post('http://localhost:3001/getUser', {id:userId})\n                const user = await response.data\n                setCorrespondingUser(user)\n\n                let postsArray = []\n                const posts = user.posts\n                for(let key in posts){\n                    postsArray.push(posts[key])\n                }\n\n                setPosts(postsArray)\n\n                const imageInfo = user.uploadProfilePicture\n                setImageUrl(imageInfo.url)\n\n                if(response.status !== 200){\n                    throw new Error('Failed to get posts.')\n                }\n\n            }catch(error){\n                console.log(error)\n            }\n        }\n\n        fetchUser()\n        fetchCorrespondingUser()\n    }, [])\n\n    const sendRequest = async () => {\n        //Post the friend request to logged in user\n        try{\n            const response = await axios.post('http://localhost:3001/addFriend', {\n                paramId:id,\n                firstName:correspondingUser.firstName,\n                lastName:correspondingUser.lastName,\n                about:correspondingUser.about,\n                city:correspondingUser.city,\n                state:correspondingUser.state,\n                status:'sentRequest',\n                profilePicture:correspondingUser.uploadProfilePicture.url,\n                age:correspondingUser.age,\n                id:correspondingUser.id\n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        //Post friend request to corresponding user.\n        try{\n            const response = await axios.post('http://localhost:3001/addFriend', {\n                paramId:userId,\n                firstName:loggedInUser.firstName,\n                lastName:loggedInUser.lastName,\n                about:loggedInUser.about,\n                city:loggedInUser.city,\n                state:loggedInUser.state,\n                status:'receivedRequest',\n                profilePicture:loggedInUser.uploadProfilePicture.url,\n                age:loggedInUser.age,\n                id:loggedInUser.id\n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    const navigateToMessageRoom = async () => {\n        history.push('MessageRoom:' + props.id)\n    }\n\n    return(\n        <div>\n            <MainNavigation link='Home'/>\n            <div className={classes.container}>\n                <div className={classes.userInfo}>\n                    <img src={imageUrl} />\n                    <p className={classes.title}>{correspondingUser.firstName + ' ' + correspondingUser.lastName}</p>\n                    <p>{correspondingUser.about}</p>\n                    <div className={classes.buttonsContainer}>\n                        <Button className={classes.buttonOne} value='Friend Request' onClick={sendRequest}/>\n                        <Button className={classes.buttonTwo} value='Message' onClick={navigateToMessageRoom}/>\n                    </div>\n                </div>\n                <div className={classes.posts}>\n                    {posts.map(post => {\n                        return <Post header={post.postHeader} body={post.post}/>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}